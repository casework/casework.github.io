@prefix action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix identity: <https://ontology.unifiedcyberontology.org/uco/identity/> .
@prefix location: <https://ontology.unifiedcyberontology.org/uco/location/> .
@prefix ns1: <http://example.org/ontology/drafting#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-10> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-10> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-10> ;
			sh:resultMessage "Value does not have class core:UcoObject" ;
			sh:resultPath action:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:nodeKind sh:IRI ;
				sh:path action:object ;
			] ;
			sh:value <http://example.org/kb/file2-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-11> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-11> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-12> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-12> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-13> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-13> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-5> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-5> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-6> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-6> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-7> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-7> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-8> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-8> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-9> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-9> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/camera-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/camera-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/camera-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/dvd-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/dvd-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/dvd-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/extracted-file-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-23419e7a-87fc-5f48-b941-615b3723e578> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/extracted-file-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-4699b931-a66e-5cb0-9093-31ea93b70ba8> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/extracted-file-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-681f5852-ebc6-5b58-a1f4-aa36a5da870c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/file-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-1c86f419-621d-5576-b333-319c098cc725> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/file-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-e642f5b3-7bb8-5b57-8582-e6dd9701f715> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/file-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-775d1e74-b058-59a0-a50c-e680e041f48d> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/kiosk-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/kiosk-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/officer-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/officer-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/officer-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-5> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-5> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-6> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-6> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-6e> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-6e> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-7> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-7> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-8> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-8> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/relationship-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-dc27e089-5491-5954-9a7e-5e672096e65b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a107dc51-8473-55b3-aeb0-b1d612b06774> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-c9afb845-3b2d-5af8-bf11-35d285209b9c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-3934df3d-1589-5897-928f-0d8fe22f116b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-5> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a6c7a86b-7f24-5b4d-87ae-b265bdaf129a> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-6> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-0c941f0a-241d-56de-941b-e2c8deca9f1e> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-0c941f0a-241d-56de-941b-e2c8deca9f1e> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-0c941f0a-241d-56de-941b-e2c8deca9f1e> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-0c941f0a-241d-56de-941b-e2c8deca9f1e> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-0c941f0a-241d-56de-941b-e2c8deca9f1e> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-1c86f419-621d-5576-b333-319c098cc725> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-1c86f419-621d-5576-b333-319c098cc725> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-1c86f419-621d-5576-b333-319c098cc725> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-1c86f419-621d-5576-b333-319c098cc725> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-23419e7a-87fc-5f48-b941-615b3723e578> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-23419e7a-87fc-5f48-b941-615b3723e578> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-23419e7a-87fc-5f48-b941-615b3723e578> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-23419e7a-87fc-5f48-b941-615b3723e578> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-3934df3d-1589-5897-928f-0d8fe22f116b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-3934df3d-1589-5897-928f-0d8fe22f116b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-3934df3d-1589-5897-928f-0d8fe22f116b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-3934df3d-1589-5897-928f-0d8fe22f116b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-4699b931-a66e-5cb0-9093-31ea93b70ba8> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-4699b931-a66e-5cb0-9093-31ea93b70ba8> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-4699b931-a66e-5cb0-9093-31ea93b70ba8> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-4699b931-a66e-5cb0-9093-31ea93b70ba8> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-681f5852-ebc6-5b58-a1f4-aa36a5da870c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-681f5852-ebc6-5b58-a1f4-aa36a5da870c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-681f5852-ebc6-5b58-a1f4-aa36a5da870c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-681f5852-ebc6-5b58-a1f4-aa36a5da870c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-775d1e74-b058-59a0-a50c-e680e041f48d> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-775d1e74-b058-59a0-a50c-e680e041f48d> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-775d1e74-b058-59a0-a50c-e680e041f48d> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-775d1e74-b058-59a0-a50c-e680e041f48d> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a107dc51-8473-55b3-aeb0-b1d612b06774> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a107dc51-8473-55b3-aeb0-b1d612b06774> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a107dc51-8473-55b3-aeb0-b1d612b06774> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a107dc51-8473-55b3-aeb0-b1d612b06774> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a6c7a86b-7f24-5b4d-87ae-b265bdaf129a> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a6c7a86b-7f24-5b4d-87ae-b265bdaf129a> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a6c7a86b-7f24-5b4d-87ae-b265bdaf129a> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-a6c7a86b-7f24-5b4d-87ae-b265bdaf129a> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-c9afb845-3b2d-5af8-bf11-35d285209b9c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-c9afb845-3b2d-5af8-bf11-35d285209b9c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-c9afb845-3b2d-5af8-bf11-35d285209b9c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-c9afb845-3b2d-5af8-bf11-35d285209b9c> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-dc27e089-5491-5954-9a7e-5e672096e65b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-dc27e089-5491-5954-9a7e-5e672096e65b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-dc27e089-5491-5954-9a7e-5e672096e65b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-dc27e089-5491-5954-9a7e-5e672096e65b> ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-e642f5b3-7bb8-5b57-8582-e6dd9701f715> ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-e642f5b3-7bb8-5b57-8582-e6dd9701f715> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-e642f5b3-7bb8-5b57-8582-e6dd9701f715> ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash <http://example.org/kb/hash-e642f5b3-7bb8-5b57-8582-e6dd9701f715> ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		]
		;
	.

