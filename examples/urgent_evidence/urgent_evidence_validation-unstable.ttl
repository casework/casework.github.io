@prefix action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix identity: <https://ontology.unifiedcyberontology.org/uco/identity/> .
@prefix location: <https://ontology.unifiedcyberontology.org/uco/location/> .
@prefix ns1: <http://example.org/ontology/drafting#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix uco-observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix vocabulary: <https://ontology.unifiedcyberontology.org/uco/vocabulary/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-10> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-10> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-10> ;
			sh:resultMessage "Value does not have class core:UcoObject" ;
			sh:resultPath action:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:nodeKind sh:IRI ;
				sh:path action:object ;
			] ;
			sh:value <http://example.org/kb/file2-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-11> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-11> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-12> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-12> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-13> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-13> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-5> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-5> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-6> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-6> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-7> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-7> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-8> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-8> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-9> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/action-uuid-9> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/camera-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/camera-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/camera-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/dvd-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/dvd-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/dvd-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/extracted-file-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/extracted-file-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/extracted-file-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/extracted-file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/file-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/file-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/file-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/file-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/kiosk-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/kiosk-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/location-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/location-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/officer-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/officer-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/officer-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/officer-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-5> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-5> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-6> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-6> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-6e> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-6e> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-7> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-7> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/provenance-record-uuid-8> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/provenance-record-uuid-8> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/relationship-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/relationship-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-1> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-2> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-2> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-3> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-3> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-4> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-4> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-5> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-5> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-photograph-uuid-6> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-photograph-uuid-6> ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath core:hasFacet ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class core:Facet ;
				sh:nodeKind sh:IRI ;
				sh:path core:hasFacet ;
			] ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/subject-device-uuid-1> ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value <http://example.org/kb/subject-device-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "1-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "2-013" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "3-022" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a location:SimpleAddressFacet ;
				ns1:roomId "B-001" ;
				location:country "United Kingdom" ;
				location:locality "London" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Hudson" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Smith" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a identity:SimpleNameFacet ;
				identity:familyName "Walker" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:ContentDataFacet ;
				uco-observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				uco-observable:mimeType "image/jpeg" ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:hash ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:Hash ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:hash ;
			] ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "DVD" ;
				uco-observable:manufacturer <http://example.org/kb/organization-e84a49ff-f34c-46fe-ab88-6f0f79023925> ;
				uco-observable:model "XYZ" ;
				uco-observable:serialNumber "756867KF234" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:DeviceFacet ;
				uco-observable:deviceType "camera" ;
				uco-observable:manufacturer <http://example.org/kb/organization-f5a0877c-2a58-4280-8f24-c0df39e8badc> ;
				uco-observable:model "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-15 12:11:54" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:18:52" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2018-12-16 08:19:01" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "2448" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "3264" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Apple" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "iPhone 4S" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:14:30" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:15:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:07" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:20:32" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:EXIFFacet ;
				uco-observable:exifData [
					a types:ControlledDictionary ;
					types:entry
						[
							a types:ControlledDictionaryEntry ;
							types:key "DateTimeDigitized" ;
							types:value "2019-01-01 14:21:00" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Height" ;
							types:value "4000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Image Width" ;
							types:value "6000" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Make" ;
							types:value "Canon" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Model" ;
							types:value "PowerShot SX540" ;
						] ,
						[
							a types:ControlledDictionaryEntry ;
							types:key "Orientation" ;
							types:value "Horizontal (normal)" ;
						]
						;
				] ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath uco-observable:exifData ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:ControlledDictionary ;
				sh:nodeKind sh:IRI ;
				sh:path uco-observable:exifData ;
			] ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1863.jpg" ;
				uco-observable:modifiedTime "2018-12-15T12:11:54+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1864.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:18:52+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_1865.jpg" ;
				uco-observable:modifiedTime "2018-12-16T08:19:01+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4829.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4830.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:14:30+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4831.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:15:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4832.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:07+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4833.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:20:32+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:extension "jpg" ;
				uco-observable:fileName "IMG_4834.jpg" ;
				uco-observable:modifiedTime "2019-01-01T14:21:00+00:00"^^xsd:dateTime ;
				uco-observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-IntakeForm.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "165646"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/documentation/EXH-20190101-7-WitnessStatement.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "135625"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:FileFacet ;
				uco-observable:fileName "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
				uco-observable:isDirectory "false"^^xsd:boolean ;
				uco-observable:sizeInBytes "5787906"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:PathRelationFacet ;
				uco-observable:path "/investigation468/results/EXH-20190101-7-KioskReport.pdf" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "3264"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "2448"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a uco-observable:RasterPictureFacet ;
				uco-observable:pictureHeight "6000"^^xsd:integer ;
				uco-observable:pictureType "jpg" ;
				uco-observable:pictureWidth "4000"^^xsd:integer ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-15 12:11:54" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:18:52" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2018-12-16 08:19:01" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "2448" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "3264" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Apple" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "iPhone 4S" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:14:30" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:15:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:07" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:20:32" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionary ;
				types:entry
					[
						a types:ControlledDictionaryEntry ;
						types:key "DateTimeDigitized" ;
						types:value "2019-01-01 14:21:00" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Height" ;
						types:value "4000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Image Width" ;
						types:value "6000" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Make" ;
						types:value "Canon" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Model" ;
						types:value "PowerShot SX540" ;
					] ,
					[
						a types:ControlledDictionaryEntry ;
						types:key "Orientation" ;
						types:value "Horizontal (normal)" ;
					]
					;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath types:entry ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class types:DictionaryEntry ;
				sh:minCount "1"^^xsd:integer ;
				sh:nodeKind sh:IRI ;
				sh:path types:entry ;
			] ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-15 12:11:54" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:18:52" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2018-12-16 08:19:01" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:14:30" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:15:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:07" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:20:32" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "DateTimeDigitized" ;
				types:value "2019-01-01 14:21:00" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "2448" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Height" ;
				types:value "4000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "3264" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Image Width" ;
				types:value "6000" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Apple" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Make" ;
				types:value "Canon" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "PowerShot SX540" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Model" ;
				types:value "iPhone 4S" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:ControlledDictionaryEntry ;
				types:key "Orientation" ;
				types:value "Horizontal (normal)" ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "09cc5d284371db21727f1171a30c6652f062e6de1282d952d0e9df36eae7c594"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "25961d1d0923bcd919b9560b81edff47b478d025e7ae2549f7ed0ac5c2ab6023"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "d54a0eaa6c2b49c962a4b172418734311458d976a5866495f3a6a0cd952924d4"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are required to not be blank nodes." ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				sh:message "UcoThings are required to not be blank nodes."@en ;
				sh:select """
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER isBlank ($this)
			}
		""" ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
			] ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
			] ;
			sh:resultMessage "UcoThings are suggested to end with a UUID." ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraint [
				a sh:SPARQLConstraint ;
				rdfs:seeAlso <https://datatracker.ietf.org/doc/html/rfc4122#section-4.1.3> ;
				sh:message "UcoThings are suggested to end with a UUID."@en ;
				sh:select '''
			PREFIX uco-core: <https://ontology.unifiedcyberontology.org/uco/core/>
			SELECT $this
			WHERE {
			        $this a/rdfs:subClassOf* uco-core:UcoThing .
			        FILTER (
			                ! REGEX (
			                        STR($this),
			                        "[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$",
			                        "i"
			                )
			        )
			}
		''' ;
			] ;
			sh:sourceConstraintComponent sh:SPARQLConstraintComponent ;
			sh:sourceShape core:UcoThing-identifier-regex-shape ;
			sh:value [
				a types:Hash ;
				types:hashMethod "SHA256"^^vocabulary:HashNameVocab ;
				types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
			] ;
		]
		;
	.

