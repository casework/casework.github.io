@prefix action: <https://ontology.unifiedcyberontology.org/uco/action/> .
@prefix core: <https://ontology.unifiedcyberontology.org/uco/core/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix observable: <https://ontology.unifiedcyberontology.org/uco/observable/> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix types: <https://ontology.unifiedcyberontology.org/uco/types/> .
@prefix vocabulary1: <https://ontology.unifiedcyberontology.org/uco/vocabulary/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .

[]
	a sh:ValidationReport ;
	sh:conforms "false"^^xsd:boolean ;
	sh:result
		[
			a sh:ValidationResult ;
			sh:focusNode <http://example.org/kb/action-uuid-10> ;
			sh:resultMessage "Value does not have class core:UcoObject" ;
			sh:resultPath action:object ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class core:UcoObject ;
				sh:nodeKind sh:BlankNodeOrIRI ;
				sh:path action:object ;
			] ;
			sh:value <http://example.org/kb/file2-uuid-1> ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode "image/jpeg" ;
			sh:resultMessage "The used mimeType value is not a concept with a skos:notation.  Some consumers of this data expect a string with the MIME 'type/subtype' format to be supplied with skos:notation.  Please either add the skos:notation to your input graph or incorporate the UCO MIME Taxonomy."@en ;
			sh:resultPath skos:notation ;
			sh:resultSeverity sh:Warning ;
			sh:sourceConstraintComponent sh:MinCountConstraintComponent ;
			sh:sourceShape observable:mimeType-notation ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "132bfadcc46addedcafcd84653f1a56007eba2f27bfcb15824536cda65a49c9a"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3777924"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "1929ec6c6186f43860da7c77c0c65d1b8543a5543572261a1b71084e7bf80a0e"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "5010291"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "2cf24dba5fb0a30e26e83b2ac5b9e29e1b161e5c1fa7425e73a43362938b9824"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3963541"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "6ba5b138057cca4e737a86083cf28426093f218efbef64967863a6c83138fe89"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4929041"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "9a171853eee9f8162e480b28c36f7619a2db8539ccfee849b8ec0068aef53789"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4007352"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "a49f0716e610bd0f77543b1e7ca7613e9b31bf32509e854c7ba65b79be502a18"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "2964571"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "cadc54f42a9d01ecb5ecdc3a9a4824c73301d6ce9857eaa73fc28317ccd5d40f"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4491816"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "ee3657ad73c09098312e71a31ca7ac468c1fb1b998b5d6647ad471dcc89c4141"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "3236101"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "Value does not have class dcterms:FileFormat" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not an instance of types:MIMEFormat or one of its subclasses.  Please consider using a value having type types:IANAMediaType or types:NonIANAMediaType."@en ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Info ;
			sh:sourceConstraintComponent sh:ClassConstraintComponent ;
			sh:sourceShape observable:mimeType-class-types-MIMEFormat ;
			sh:value "image/jpeg" ;
		] ,
		[
			a sh:ValidationResult ;
			sh:focusNode [
				a observable:ContentDataFacet ;
				observable:hash [
					a types:Hash ;
					types:hashMethod "SHA256"^^vocabulary1:HashNameVocab ;
					types:hashValue "fc0819ed4dcb2af9c85a041a0da11ea6a146dec0b108c09f5e0d41e8ea3bb041"^^xsd:hexBinary ;
				] ;
				observable:mimeType "image/jpeg" ;
				observable:sizeInBytes "4565505"^^xsd:integer ;
			] ;
			sh:resultMessage "Value is not of Node Kind sh:IRI" ;
			sh:resultPath observable:mimeType ;
			sh:resultSeverity sh:Violation ;
			sh:sourceConstraintComponent sh:NodeKindConstraintComponent ;
			sh:sourceShape [
				sh:class dcterms:FileFormat ;
				sh:nodeKind sh:IRI ;
				sh:path observable:mimeType ;
			] ;
			sh:value "image/jpeg" ;
		]
		;
	.

